@if (Model.PageSize == 0)
{
    return;
}

<div class="d-flex flex-row bg-light flex-nowrap">

    <div class="p-1 mr-auto  d-none d-md-block align-self-center">
        Records @(((Model.PageNumber - 1) * Model.PageSize) + 1) to

        @{
            int temp = (((Model.PageNumber - 1) * Model.PageSize) + Model.PageSize);

            if (temp > Model.TotalRows)
            {
                temp = Model.TotalRows;
            }

        }
        @temp.ToString("N0")  of @Model.TotalRows.ToString("N0")
    </div>


    <div class="p-1 align-self-center">
        @if (Model.HasPreviousPage)
            {
            <a class="btn btn-primary btn-sm" href="javascript:paging(1, '@Model.Sort', '@Model.SortDir')"><i class="fa fa-backward fa-fw"></i></a>
            @Html.Raw(" ");
            <a class="btn btn-primary btn-sm" href="javascript:paging(@Model.PageNumber -1 , '@Model.Sort', '@Model.SortDir')"><i class="fa fa-caret-left fa-fw"></i> Prev </a>
        }
        else
        {
            <button class="btn btn-outline-primary btn-sm" disabled><i class="fa fa-backward fa-fw"></i></button>
            @Html.Raw(" ");
            @:<button class="btn btn-outline-primary btn-sm" disabled><i class="fa fa-caret-left fa-fw"></i> Prev</button>
        }
    </div>

    <div class="p-1 align-self-center small">
        @Html.Raw("Page " + Model.PageNumber.ToString("N0") + " of " + Model.TotalPages.ToString("N0"))
    </div>



    <div class="p-1 align-self-center">
        @if (Model.HasNextPage)
        {
            <a class="btn btn-primary btn-sm" href="javascript:paging(@(Model.PageNumber + 1), '@Model.Sort', '@Model.SortDir')">Next <i class="fa fa-caret-right fa-fw"></i></a>
            @Html.Raw(" ");
            <a class="btn btn-primary btn-sm" href="javascript:paging(@(Model.TotalPages), '@Model.Sort', '@Model.SortDir')"><i class="fa fa-forward"></i></a>
        }
        else
        {
            @:<button class="btn btn-outline-primary btn-sm" disabled> Next <i class="fa fa-caret-right fa-fw"></i></button>
            @Html.Raw(" ")
            @:<button class="btn btn-outline-primary btn-sm" disabled><i class="fa fa-forward fa-fw"></i></button>
        }
    </div>

    <div class="p-1 ml-auto  d-none d-md-block align-self-center">
        Page size:
        <select id="PageSize" name="PageSize" onchange="paging(1, '@Model.Sort', '@Model.SortDir')">
            <option value="5" @(Model.PageSize == 5 ? "selected=\"selected\"" : "")>5</option>
            <option value="10" @(Model.PageSize == 10 ? "selected=\"selected\"" : "")>10</option>
            <option value="20" @(Model.PageSize == 20 ? "selected=\"selected\"" : "")>20</option>
            <option value="50" @(Model.PageSize == 50 ? "selected=\"selected\"" : "")>50</option>
        </select>
    </div>
</div>



<script type="text/javascript">

    $(document).ready(function () {
        console.log("document ready");

        //rutigliano 02/04/2014 per la visualizzazione delle tabelle al 100%
        //$("#MyWebGrid").css("display", "table");


        var links = $('#MyWebGrid thead a[href*=sort]');
        //alert(links.length);

        links.click(function () {
            //alert("Click:  " + this.href );
            let pageNumber = $("input[name='PageNumber']").val();
            //alert("PageNumber : " + pageNumber);

            let sort = this.href.match('sort=([a-zA-Z]*)')[1];
            //alert("Sort: " + sort );

            let sortDir = this.href.match('sortdir=([a-zA-Z]*)')[1];
            //console.log("sortDir.toUpperCase() " + sortDir.toUpperCase());
        
            paging(pageNumber, sort, sortDir);

            return false;
        });


    });



    function paging(page, sort, sortDir) {
        console.log("Paging Sort: " + sort + " " + sortDir);
        //alert("Paging Page Numeber: " + page);

        var pageSize;
        pageSize = $("select[name='PageSize']").val();
        //alert("PageSize: " +  pageSize);

        if ($("input[name='PageNumber']").length == 0) {
            $('<input />').attr('type', 'hidden')
                         .attr('name', 'PageNumber')
                         .attr('value', page)
                         .appendTo('#MyForm');
        } else {
            $("input[name='PageNumber']").val(page);
        }


        if ($("input[name='Sort']").length == 0) {
            $('<input />').attr('type', 'hidden')
                         .attr('name', 'Sort')
                         .attr('value', sort)
                         .appendTo('#MyForm');
        } else {
            $("input[name='Sort']").val(sort);
        }


        if ($("input[name='SortDir']").length == 0) {
            $('<input />').attr('type', 'hidden')
                         .attr('name', 'SortDir')
                         .attr('value', sortDir)
                         .appendTo('#MyForm');
        } else {
            $("input[name='SortDir']").val(sortDir);
        }


        if ($("input[name='PageSize']").length == 0) {
            $('<input />').attr('type', 'hidden')
                         .attr('name', 'PageSize')
                         .attr('value', pageSize)
                         .appendTo('#MyForm');
        } else {
            $("input[name='PageSize']").val(pageSize);
        }

        $("#MyForm").submit();
    }

</script>

