@model MyWebApplication.Models.UpdateModel
@{
    Layout = "~/Views/Shared/_MasterPageMobile.cshtml";
}


<nav class="mt-3" aria-label="breadcrumb" itemprop="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index","Libri")">Ricerca</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("MyAnnunci","Libri")">I miei annunci</a></li>
        <li class="breadcrumb-item active" aria-current="page">Annuncio</li>
    </ol>
</nav>
<h2>Annuncio:  @Model.libro.titolo</h2>


<p>In questa pagina puoi modificare il testo del tuo annuncio, aggiungere delle <b>photo</b>  e visualizzare le trattative in corso.</p>


<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item"><a href="#tab-1" id="tab-1-tab" class="nav-link active" role="tab" data-bs-toggle="tab" aria-controls="tab-1" aria-selected="true">Info</a></li>
    <li class="nav-item"><a href="#tab-2" id="tab-2-tab" class="nav-link" role="tab" data-bs-toggle="tab" aria-controls="tab-2" aria-selected="false">Click & Prezzo</a></li>
    <li class="nav-item"><a href="#tab-3" id="tab-3-tab" class="nav-link" role="tab" data-bs-toggle="tab" aria-controls="tab-3" aria-selected="false">Trattative</a></li>
    <li class="nav-item"><a href="#tab-4" id="tab-4-tab" class="nav-link" role="tab" data-bs-toggle="tab" aria-controls="tab-4" aria-selected="false">Descrizione</a></li>
    <li class="nav-item"><a href="#tab-5" id="tab-5-tab" class="nav-link" role="tab" data-bs-toggle="tab" aria-controls="tab-5" aria-selected="false">Photo</a></li>
</ul>


<div class="tab-content mb-3 mt-3" id="myTabContent">

    <div id="tab-1" class="tab-pane fade show active" role="tabpanel" aria-labelledby="tab-1-tab">
        @{Html.RenderPartial("_TabInfoLibro", Model.libro);}
    </div>

    <div id="tab-2" class="tab-pane fade" role="tabpanel" aria-labelledby="tab-2">


        <div class="card mb-3">
            <div class="card-header">Statistiche sui click</div>
            <div class="card-body">
                <p>In questa pagina puoi monitare il numero di volte che viene visualizzato il tuo annuncio.</p>
                <p>Hai la possibilità di azzerare il contatore parziale.</p>

                <p class="badge badge-pill badge-info">Contatore Totale <span class="badge badge-light">@Model.libro.countClick</span></p>
                <h2 class="badge badge-pill badge-warning">Contatore Parziale <span class="badge badge-light" id="contatoreParziale">@Model.libro.countClickParziale</span></h2>

                <p class="badge badge-pill badge-info">L&#39;ultimo click è stato eseguito il <span class="badge badge-light">@MyHelper.decodeNull(Model.libro.dateLastClick)</span></p>

                @using (Html.BeginForm("ResetContatore", "Libri", FormMethod.Post, new { id = "MyFormResetContatore" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="annuncioId" value="@Model.libro.annuncioId" />
                    <input type="button" class="btn btn-primary float-right" value="Reset del contatore parziale" onclick="javascript: MyAsyncResetPopup();" />
                }
            </div>
        </div>


        <div class="card">
            <div class="card-header">Aggiorna il prezzo</div>
            <div class="card-body">
                <p>In questa sezione hai la possibilià di <b>aggiornare il prezzo</b> del tuo annuncio.</p>
                <p>Questa modifica viene notificata solo gli utenti in trattativa, tramite un messaggio email.</p>
                @using (Html.BeginForm("UpdatePrezzo", "Libri", FormMethod.Post, new { id = "MyFormUpdatePrezzo" }))
                {
                    @Html.AntiForgeryToken()

                    <label>Prezzo attuale € @Model.libro.prezzo.ToString("N2")</label>

                    <div data-role="fieldcontain">
                        <label for="nuovoPrezzo">Nuovo valore (nel seguente formato: 12345,00) €:</label>
                        <input type="number" id="nuovoPrezzo" name="nuovoPrezzo" pattern="[0-9]+([,\.][0-9]+)?" required="required" step="0.01" min="0" value="@Model.libro.prezzo.ToString("N2").Replace(".", "").Replace(",", ".")" />
                    </div>

                    <input type="hidden" name="annuncioId" value="@Model.libro.annuncioId" />
                    <input type="button" class="btn btn-primary float-right" value="Modifica il prezzo" onclick="updatePrezzoPopup();" />
                }
            </div>
        </div>



    </div>


    <div id="tab-3" class="tab-pane fade" role="tabpanel" aria-labelledby="tab-3-tab">
        @{Html.RenderPartial("_TabellaTrattative", Model.trattative);}
    </div>

    <div id="tab-4" class="tab-pane fade" role="tabpanel" aria-labelledby="tab-4-tab">
        <p>La modifica del testo del annuncio viene notificata a tutti gli utenti in trattativa, tramite un messaggio email.</p>


        @using (Html.BeginForm("UpdateNota", "Libri", FormMethod.Post, new { id = "MyFormUpdateNota" }))
        {
            @Html.AntiForgeryToken()
            <textarea class="summernote" name="nota" id="nota">@Model.libro.nota</textarea>

            <br />
            <input type="hidden" name="annuncioId" value="@Model.libro.annuncioId" />
            <input type="button" value="Modifica la descrizione" class="btn btn-primary float-right" onclick="updateNotaPopup()" />
        }

    </div>

    <div id="tab-5" class="tab-pane fade" role="tabpanel" aria-labelledby="tab-5-tab">

        <p>Clicca sul bottone per aggiungere una nuova immagine: </p>
        <p>
            Le immagini con dimensione maggiore di @MyWebApplication.Controllers.LibriController.MaxWidthImage x @MyWebApplication.Controllers.LibriController.MaxHeightImage (WxH) verranno automaticamente ridimensionate.
            <br />
            Sono ammessi file con estenzione Gif, Jpeg e Png.
        </p>



        <div id="MyGalleryEdit">
            @{
                MyWebApplication.Models.GalleryModel modelGallery = new MyWebApplication.Models.GalleryModel();
                modelGallery.photos = Model.photos;
                modelGallery.externalId = Model.libro.annuncioId;

                Html.RenderPartial("~/Views/Shared/GalleryEdit.cshtml", modelGallery);
            }
        </div>

    </div>
</div>


<script type="text/javascript">
    //tinymce.init({ mode: "exact", elements: "nota", encoding: "xml" });
    //$('#nota').summernote({ tabsize: 2, height: 200 });

    $(document).ready(function () {
        $('#nota').summernote({
            tabsize: 2, height: 200,
            toolbar: [
                // [groupName, [list of button]]
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['font', ['strikethrough', 'superscript', 'subscript']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['height', ['height']]
            ]
        });

    });


</script>


<div>
    <a class="btn btn-secondary" href="@Url.Action("MyAnnunci", "Libri")" role="button">Torna all'elenco</a>
</div>




<script type="text/javascript">

    function MyAsyncResetPopup() {
        console.log("MyAsyncResetPopup");
        $("#confirmReset").modal('show');
    }

    //
    function confirmResetConfirmOnClick() {
        console.log("confirmResetConfirmOnClick");
        MyAsyncReset();
        $("#confirmReset").modal('hide');
    }

    function MyAsyncReset() {
        console.log("MyAsyncReset");


        //   if (confirm("Confermare l'azzeramento del contatore parziale?")) {
        //alert("MyAsyncReset");
        var data = $('#MyFormResetContatore').serialize();

        $.post('@Url.Action("ResetContatore", "Libri")', data, function (risposta) {
            //alert("Risposta: " + risposta.esito);
            if (risposta.esito == "Success") {
                // alert("Risposta: " + risposta.esito);
                $("#contatoreParziale").text("0");
            }
        });
        // }


    }


    function updatePrezzoPopup() {
        console.log("updatePrezzoPopup");
        if (isNaN(parseFloat($("#nuovoPrezzo").val()))) {
            alert("Fomato non corretto. Es: 1234,00");
            return false;
        }
        $("#confirmPezzo").modal('show');

    }

    function confirmPezzoConfirmOnClick() {
        console.log("confirmPezzoConfirmOnClick");
        let num;
        num = parseFloat($("#nuovoPrezzo").val()).toFixed(2);

        let messaggio;
        messaggio = "Nuovo importo: " + num.replace(".", ",") + '\n\r';
        console.log(messaggio);


        $("#nuovoPrezzo").val(num);
        $("#MyFormUpdatePrezzo").submit();

        //$("#confirmPezzo").modal('hide');
    }


    function updateNotaPopup() {
        console.log("updateNotaPopup");
        $("#confirmNota").modal('show');
    }

    function confirmNotaConfirmOnClick() {
        console.log("confirmNotaConfirmOnClick");
        $("#MyFormUpdateNota").submit();
    }

</script>


@{ Html.RenderPartial("_ConfirmPopup", new ViewDataDictionary { { "ID", "confirmReset" }, { "title", "Reset del contatore" } }); }



@{ Html.RenderPartial("_ConfirmPopup", new ViewDataDictionary { { "ID", "confirmPezzo" }, { "title", "Modifica del prezzo" }, { "body", "Tutti gli utenti in trattativa con questo annuncio verranno notificati della modifica tramite un messaggio email. Confermare la modifica?" } }); }



@{ Html.RenderPartial("_ConfirmPopup", new ViewDataDictionary { { "ID", "confirmNota" }, { "title", "Modifica della descrizione" }, { "body", "Tutti gli utenti in trattativa con questo annuncio verranno notificati della modifica tramite un messaggio email. Confermare la modifica?" } }); }
