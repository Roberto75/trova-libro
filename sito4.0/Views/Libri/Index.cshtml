@using System.Diagnostics;
@model Annunci.Libri.Models.SearchLibri
@{
    ViewBag.Title = "Trova-libro: ricerca libri " + (Model.filter.categoria == null ? "" : " categoria: " + Model.filter.categoria);
    //ViewBag.Description = "Trova-libro ti offre la possibilità di cercare gratuitamente libri e testi universitari con estrema velocità e semplicità mettendoti direttamente in contatto con il venditore";

    if (Model.filter.categoria == null)
    {
        ViewBag.Description = "Ricerca libri e testi universitari usati tra tutte le categorie presenti";
    }
    else
    {
        ViewBag.Description = "Ricerca libri usati: categoria " + Model.filter.categoria;
    }


    ViewBag.Keywords = "libro usato " + (Model.filter.categoria == null ? "" : ": " + Model.filter.categoria) + ", libri usati " + (Model.filter.categoria == null ? "" : ": " + Model.filter.categoria) + ", libro, usati, usato, università, universitari, compro libri usati, vendo libri usati, cerco libri usati, scambio, annunci, vendo libri, cerco libri, compro vendo libri, vendo libri " + (Model.filter.categoria == null ? "" : ": " + Model.filter.categoria);

    Layout = "~/Views/Shared/_MasterPageMobile.cshtml";

    WebGrid wGrid;
    if (Model.PageSize == 0)
    {
        wGrid = new WebGrid(null, rowsPerPage: Model.TotalRows, canPage: false, defaultSort: Model.Sort, canSort: false);
    }
    else
    {
        wGrid = new WebGrid(null, rowsPerPage: Model.PageSize, canPage: false, defaultSort: Model.Sort, canSort: true);
    }


    if (Model.SortDir == "ASC")
    {
        wGrid.SortDirection = SortDirection.Ascending;
    }
    else
    {
        wGrid.SortDirection = SortDirection.Descending;
    }
    wGrid.Bind(Model.Libri, rowCount: Model.TotalRows, autoSortAndPage: false);


    //Debug.WriteLine(String.Format("wGrid  sort {0} - dir {1} - {2}", wGrid.SortColumn, wGrid.SortDirection, wGrid.SortDirectionFieldName));
    //Debug.WriteLine(String.Format("Model  sort {0} - dir {1}", Model.Sort, Model.SortDir));

}

<nav class="mt-3" aria-label="breadcrumb" itemprop="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index","Home")">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Ricerca</li>
    </ol>
</nav>
<h1>Ricerca <small>@(Model.filter.categoria == null ? "" : Model.filter.categoria.ToLower())</small></h1>

<form action="@Url.Action("Index", "Libri")" method="post" class="form-horizontal" id="MyForm">


    <button class="btn btn-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
        <i class="fa fa-bars fa-fw"></i>Filtri <span class="badge badge-light">@Model.countFilter()</span>
    </button>

    <input type="hidden" id="collapseShow" name="collapseShow" value="true" />


    <div class="collapse mt-3" id="collapseFilter">

        <div class="form-group">
            <label for="data" class="control-label">Data inserimento</label>
            <div class="form-check form-check-inline">
                <input type="radio" class="form-check-input" name="days" id="radio-oggi" value="@((int)MyManagerCSharp.ManagerDB.Days.Oggi)" @((Model.days == MyManagerCSharp.ManagerDB.Days.Oggi) ? "checked" : "") />
                <label class="form-check-label" for="radio-oggi">Oggi</label>
            </div>
            <div class="form-check form-check-inline">
                <input type="radio" class="form-check-input" name="days" id="radio-7-giorni" value="@((int)MyManagerCSharp.ManagerDB.Days.Ultimi_7_giorni)" @((Model.days == MyManagerCSharp.ManagerDB.Days.Ultimi_7_giorni) ? "checked" : "") />
                <label class="form-check-label" for="radio-7-giorni">Ultima settimana</label>
            </div>
            <div class="form-check form-check-inline">
                <input type="radio" class="form-check-input" name="days" id="radio-30-giorni" value="@((int)MyManagerCSharp.ManagerDB.Days.Ultimi_30_giorni)" @((Model.days == MyManagerCSharp.ManagerDB.Days.Ultimi_30_giorni) ? "checked" : "") />
                <label class="form-check-label" for="radio-30-giorni"> Ultimo mese</label>
            </div>
            <div class="form-check form-check-inline">
                <input type="radio" class="form-check-input" name="days" id="radio-tutti" value="@((int)MyManagerCSharp.ManagerDB.Days.Tutti)" @((Model.days == MyManagerCSharp.ManagerDB.Days.Tutti) ? "checked" : "") />
                <label class="form-check-label" for="radio-tutti">Tutti</label>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="titolo">Titolo</label>
                    <input type="text" class="form-control" name="filter.titolo" id="titolo" value="@Model.filter.titolo">
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="titolo">Autore</label>
                    <input type="text" class="form-control" name="filter.autore" id="autore" value="@Model.filter.autore">
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="isbn">ISBN</label>
                    <input type="text" class="form-control" name="filter.isbn" id="isbn" value="@Model.filter.isbn">
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label for="comboTipo">Tipo di annuncio</label>
                    <select class="form-control mb-3" id="comboTipo" name="filter.tipo" value="@(Model.filter.tipo!= null?Model.filter.tipo.Value.ToString():"")">
                        <option value="">---</option>
                        <option value="1" @( Model.filter.tipo != null && (int)Model.filter.tipo == 1 ? "selected" : "")>Vendo</option>
                        <option value="2" @( Model.filter.tipo != null && (int)Model.filter.tipo == 2 ? "selected" : "")>Compro</option>
                        <option value="3" @( Model.filter.tipo != null && (int)Model.filter.tipo == 3 ? "selected" : "")>Scambio</option>
                    </select>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="comboCategoria">Categoria</label>
                    <input type="hidden" id="categoria" name="filter.categoria" value="@Model.filter.categoria" />
                    <select class="form-control mb-3" id="comboCategoria" name="filter.categoriaId">
                        <option value="">---</option>
                        @foreach (MyManagerCSharp.Models.MyItem item in Model.comboCategorie)
                        {
                            <option value="@item.Value" @(item.Value == Model.filter.categoriaId.ToString() ? "selected" : "")>@item.Text</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label for="comboSubCategoria">Testi scolastici/universitari</label>
                    <select class="form-control mb-3" id="comboSubCategoria" name="filter.subCategoriaId">
                        <option value="">---</option>
                        @foreach (MyManagerCSharp.Models.MyItem item in Model.comboSubCategorie)
                        {
                            <option value="@item.Value" @(item.Value == Model.filter.subCategoriaId.ToString() ? "selected" : "")>@item.Text</option>
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">

                <div class="form-group">
                    <label for="comboRegione">Regione</label>
                    <select class="form-control mb-3" id="comboRegione" name="filter.regioneId">
                        <option value="">---</option>
                        @foreach (MyManagerCSharp.Models.MyItem item in Model.comboRegioni)
                        {
                            <option value="@item.Value" @(item.Value == Model.filter.regioneId.ToString() ? "selected" : "")>@item.Text</option>
                        }
                    </select>
                    <input type="hidden" id="regione" name="filter.regione" />
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label for="comboProvincia">Provincia</label>
                    <select class="form-control mb-3" id="comboProvincia" name="filter.provinciaId">
                        <option value="">---</option>
                        @foreach (MyManagerCSharp.Models.MyItem item in Model.comboProvince)
                        {
                            <option value="@item.Value" @(item.Value == Model.filter.provinciaId ? "selected" : "")>@item.Text</option>
                        }
                    </select>
                    <input type="hidden" id="provincia" name="filter.provincia" />
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label for="comboComune">Comune</label>
                    <select class="form-control mb-3" id="comboComune" name="filter.comuneId">
                        <option value="">---</option>
                        @foreach (MyManagerCSharp.Models.MyItem item in Model.comboComuni)
                        {
                            <option value="@item.Value" @(item.Value == Model.filter.comuneId ? "selected" : "")>@item.Text</option>
                        }
                    </select>
                    <input type="hidden" id="comune" name="filter.comune" />
                </div>

            </div>
        </div>
    </div>


    <button type="button" class="btn btn-default" onclick="resetOnClick()">Reset</button>
    <button type="submit" class="btn btn-primary"><i class="fa fa-search fa-fw"></i>Ricerca</button>

    @if (!String.IsNullOrEmpty(Model.filter.comuneId))
    {
        <div class="alert alert-warning mt-3" role="alert">
            Prova a rieseguire la ricerca togliendo il filtro sul comune
        </div>
    }


    @if (Model.TotalRows == 0)
    {
        <div class="alert alert-info mt-3" role="alert">
            Non è stato trovato nessun libro. Modificare i filtri di ricerca.
        </div>
    }
    else
    {
        <div class="mt-3">
            @wGrid.GetHtml(
            fillEmptyRows: false,
            tableStyle: MyConstants.TABLE_STYLE,
            headerStyle: MyConstants.TABLE_HEADER_STYLE,
            footerStyle: MyConstants.TABLE_FOOTER_STYLE,
            rowStyle: MyConstants.TABLE_ROW_STYLE,
            alternatingRowStyle: MyConstants.TABLE_ALTERNATING_ROW_STYLE,
            htmlAttributes: new { data_role = "table", id = "MyWebGrid", data_mode = "reflow" },
            columns: new[]{
                wGrid.Column (columnName:"dataInserimento", header :"Data",  format: p=>p.DataInserimento.ToShortDateString() ,canSort : true),
                    wGrid.Column (columnName:"titolo", header :"Titolo", format:(item) =>  Html.ActionLink ( (string) (string.IsNullOrEmpty (item.titolo)?"N/A":item.titolo.ToString()), "Details",   new {id=item.annuncioId} ), canSort:true),
                    wGrid.Column (columnName:"categoria", header :"Categoria", canSort : true),
                    wGrid.Column (columnName:"autore", header :"Autore", canSort : true),
                    wGrid.Column (columnName:"login", header :"Utente", canSort : true),
                    wGrid.Column (columnName:"tipo", header :"Tipo", canSort : true),
                    wGrid.Column (columnName:"prezzo", header :"Prezzo", canSort : true),
                    wGrid.Column ("", header :"Photo",    format: item=> (ViewData["hashtablePhoto"] as System.Collections.Hashtable)[item.annuncioId],  canSort : false),
                    wGrid.Column ("", header :"",
                        format:@<text><a class="btn btn-info btn-sm" title="Detagli" href="@Url.Action("Details", "Libri", new { id = item.annuncioId })"><i class="fa fa-info"></i></a></text>
                        , canSort : false)   ,
            })

            @{Html.RenderPartial("_Paging", Model);}
        </div>
                }
</form>



@Html.Partial("_ComboCategoria")
@Html.Partial("_ComboRegioneProvinciaComune")

<script type="text/javascript">

    $(document).ready(function () {
        $("#comboCategoria").on("change", comboCategoriaOnChange);
        //$("#comboSubCategoria").on("change", comboSubCategoriaOnChange);
        $("#comboRegione").on("change", comboRegioneOnChange);
        $("#comboProvincia").on("change", comboProvinciaOnChange);

        setComboCategoria(@Model.filter.categoriaId);
        setComboSubCategoria(@Model.filter.subCategoriaId);

    
        document.getElementById('collapseFilter').addEventListener('hidden.bs.collapse', function () {
            console.log("collapseFilter hide");
            $("#collapseShow").val(0);
        })


        document.getElementById('collapseFilter').addEventListener('shown.bs.collapse', function () {
            console.log("collapseFilter show");
            $("#collapseShow").val(1);
        })
    });



    function resetOnClick() {
        console.log("resetOnClick");
        $("#titolo").val("");
        $("#autore").val("");
        $("#isbn").val("");
        $("#radio-tutti").prop("checked", true);
        $("#comboTipo").val("");
        $("#comboCategoria").val("").change();
        //$("#comboSubCategoria").val("");
        $("#comboRegione").val("").change();

        $("#MyForm").submit();
    }

</script>
